{"ast":null,"code":"import{Chip,Container,Divider,Link,Paper,Table,TableBody,TableCell,TableContainer,TableFooter,TableHead,TableRow,Typography}from\"@mui/material\";import{useEffect,useState}from\"react\";import ReactMarkdown from\"react-markdown\";import{useLocation}from\"react-router-dom\";import rehypeRaw from\"rehype-raw\";import remarkBreaks from\"remark-breaks\";import remarkGfm from\"remark-gfm\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MarkdownLink(props){return/*#__PURE__*/_jsx(Link,{href:props.href,target:\"_blank\",underline:\"hover\",children:props.children});}function MarkdownTable(props){return/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsx(Table,{size:\"small\",\"aria-label\":\"a dense table\",children:props.children})});}function MarkdownTableCell(props){return/*#__PURE__*/_jsx(TableCell,{children:props.children});}function MarkdownCode(props){var _props$children;return/*#__PURE__*/_jsx(Chip,{size:\"small\",label:(_props$children=props.children)===null||_props$children===void 0?void 0:_props$children.toString()});}function MarkdownH1(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h1\",sx:{fontSize:\"2em\",display:\"block\",marginBlockStart:\"0.67em\",marginBlockEnd:\"0.3em\",fontWeight:\"bold\",lineHeight:1.25},children:props.children}),/*#__PURE__*/_jsx(Divider,{})]});}function MarkdownH2(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h2\",sx:{fontSize:\"1.5em\",display:\"block\",marginBlockStart:\"0.83em\",marginBlockEnd:\"0.3em\",fontWeight:\"bold\",lineHeight:1.25},children:props.children}),/*#__PURE__*/_jsx(Divider,{})]});}// function MarkdownParagraph(props: { children: ReactNode }) {\n//   if (!props.children) return <Typography>{props.children}</Typography>;\n//   const element: any = props.children;\n//   let result = [];\n//   let anyInlineElement = false;\n//   for (let e of element) {\n//     if (e.type) {\n//       anyInlineElement = true;\n//     }\n//   }\n//   if (anyInlineElement) {\n//     for (let e of element) {\n//       if (e.type) {\n//         result.push({ ...e });\n//       } else {\n//         result.push(\n//           <Typography key={e} display=\"inline\">\n//             {e}\n//           </Typography>\n//         );\n//       }\n//     }\n//   } else {\n//     for (let e of element) {\n//       if (e.type) {\n//         result.push({ ...e });\n//       } else {\n//         result.push(<Typography key={e}>{e}</Typography>);\n//       }\n//     }\n//   }\n//   return <>{result}</>;\n// }\nexport default function MDContainer(_ref){let{path}=_ref;const[content,setContent]=useState(\"\");const{pathname}=useLocation();useEffect(()=>{fetch(path).then(res=>res.text()).then(text=>setContent(text));},[path]);useEffect(()=>{let title=pathname.substring(1,pathname.length);title=title[0].toUpperCase()+title.substring(1);document.title=\"\".concat(process.env.REACT_APP_NAME,\" | \").concat(title);},[pathname]);return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(ReactMarkdown,{children:content,components:{code:MarkdownCode,a:MarkdownLink,// p: MarkdownParagraph,\ntable:MarkdownTable,thead:TableHead,tbody:TableBody,th:MarkdownTableCell,tr:TableRow,td:MarkdownTableCell,tfoot:TableFooter,h1:MarkdownH1,h2:MarkdownH2// br: MarkdownBr,\n},remarkPlugins:[remarkGfm,remarkBreaks],rehypePlugins:[rehypeRaw]})});}","map":{"version":3,"names":["Chip","Container","Divider","Link","Paper","Table","TableBody","TableCell","TableContainer","TableFooter","TableHead","TableRow","Typography","useEffect","useState","ReactMarkdown","useLocation","rehypeRaw","remarkBreaks","remarkGfm","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","MarkdownLink","props","href","target","underline","children","MarkdownTable","component","size","MarkdownTableCell","MarkdownCode","_props$children","label","toString","MarkdownH1","variant","sx","fontSize","display","marginBlockStart","marginBlockEnd","fontWeight","lineHeight","MarkdownH2","MDContainer","_ref","path","content","setContent","pathname","fetch","then","res","text","title","substring","length","toUpperCase","document","concat","process","env","REACT_APP_NAME","components","code","a","table","thead","tbody","th","tr","td","tfoot","h1","h2","remarkPlugins","rehypePlugins"],"sources":["/Users/philippknestel/Documents/GitHub/portfolio/portfolio-phkn/src/app/components/MDContainer.tsx"],"sourcesContent":["import {\n  Chip,\n  Container,\n  Divider,\n  Link,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport { ReactNode, useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useLocation } from \"react-router-dom\";\nimport rehypeRaw from \"rehype-raw\";\nimport remarkBreaks from \"remark-breaks\";\nimport remarkGfm from \"remark-gfm\";\n\ninterface Props {\n  path: string;\n}\n\nfunction MarkdownLink(props: any) {\n  return (\n    <Link href={props.href} target=\"_blank\" underline=\"hover\">\n      {props.children}\n    </Link>\n  );\n}\n\nfunction MarkdownTable(props: { children: ReactNode }) {\n  return (\n    <TableContainer component={Paper}>\n      <Table size=\"small\" aria-label=\"a dense table\">\n        {props.children}\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction MarkdownTableCell(props: { children: ReactNode }) {\n  return (\n    <TableCell>\n      {props.children}\n      {/* <Typography>{props.children}</Typography> */}\n    </TableCell>\n  );\n}\n\nfunction MarkdownCode(props: { children: ReactNode }) {\n  return <Chip size=\"small\" label={props.children?.toString()} />;\n}\n\nfunction MarkdownH1(props: { children: ReactNode }) {\n  return (\n    <>\n      <Typography\n        variant=\"h1\"\n        sx={{\n          fontSize: \"2em\",\n          display: \"block\",\n          marginBlockStart: \"0.67em\",\n          marginBlockEnd: \"0.3em\",\n          fontWeight: \"bold\",\n          lineHeight: 1.25,\n        }}\n      >\n        {props.children}\n      </Typography>\n      <Divider />\n    </>\n  );\n}\n\nfunction MarkdownH2(props: { children: ReactNode }) {\n  return (\n    <>\n      <Typography\n        variant=\"h2\"\n        sx={{\n          fontSize: \"1.5em\",\n          display: \"block\",\n          marginBlockStart: \"0.83em\",\n          marginBlockEnd: \"0.3em\",\n          fontWeight: \"bold\",\n          lineHeight: 1.25,\n        }}\n      >\n        {props.children}\n      </Typography>\n      <Divider />\n    </>\n  );\n}\n\n// function MarkdownParagraph(props: { children: ReactNode }) {\n//   if (!props.children) return <Typography>{props.children}</Typography>;\n\n//   const element: any = props.children;\n//   let result = [];\n\n//   let anyInlineElement = false;\n//   for (let e of element) {\n//     if (e.type) {\n//       anyInlineElement = true;\n//     }\n//   }\n\n//   if (anyInlineElement) {\n//     for (let e of element) {\n//       if (e.type) {\n//         result.push({ ...e });\n//       } else {\n//         result.push(\n//           <Typography key={e} display=\"inline\">\n//             {e}\n//           </Typography>\n//         );\n//       }\n//     }\n//   } else {\n//     for (let e of element) {\n//       if (e.type) {\n//         result.push({ ...e });\n//       } else {\n//         result.push(<Typography key={e}>{e}</Typography>);\n//       }\n//     }\n//   }\n\n//   return <>{result}</>;\n// }\n\nexport default function MDContainer({ path }: Props) {\n  const [content, setContent] = useState(\"\");\n  const { pathname } = useLocation();\n  useEffect(() => {\n    fetch(path)\n      .then((res) => res.text())\n      .then((text) => setContent(text));\n  }, [path]);\n\n  useEffect(() => {\n    let title = pathname.substring(1, pathname.length);\n    title = title[0].toUpperCase() + title.substring(1);\n    document.title = `${process.env.REACT_APP_NAME!} | ${title}`;\n  }, [pathname]);\n\n  return (\n    <Container>\n      <ReactMarkdown\n        children={content}\n        components={{\n          code: MarkdownCode,\n          a: MarkdownLink,\n          // p: MarkdownParagraph,\n          table: MarkdownTable,\n          thead: TableHead,\n          tbody: TableBody,\n          th: MarkdownTableCell,\n          tr: TableRow,\n          td: MarkdownTableCell,\n          tfoot: TableFooter,\n          h1: MarkdownH1,\n          h2: MarkdownH2,\n          // br: MarkdownBr,\n        }}\n        remarkPlugins={[remarkGfm, remarkBreaks]}\n        rehypePlugins={[rehypeRaw]}\n      />\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}