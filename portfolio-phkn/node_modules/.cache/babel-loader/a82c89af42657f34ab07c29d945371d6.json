{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction resolveValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n  } catch (e) {// Unsupported\n  }\n  return value || defaultValue;\n}\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = resolveValue(modeStorageKey, defaultMode);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme: resolveValue(\"\".concat(colorSchemeStorageKey, \"-light\")) || defaultLightColorScheme,\n      darkColorScheme: resolveValue(\"\".concat(colorSchemeStorageKey, \"-dark\")) || defaultDarkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      const newMode = !mode ? defaultMode : mode;\n      if (mode === currentState.mode) {\n        return currentState;\n      }\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(modeStorageKey, newMode);\n      }\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value || typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(\"`\".concat(value, \"` does not exist in `theme.colorSchemes`.\"));\n      } else {\n        setState(currentState => {\n          const newState = _extends({}, currentState);\n          if (!value) {\n            // reset to default color scheme\n            newState.lightColorScheme = defaultLightColorScheme;\n            newState.darkColorScheme = defaultDarkColorScheme;\n            return newState;\n          }\n          processState(currentState, mode => {\n            localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-\").concat(mode), value);\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else if (value.light && !joinedColorSchemes.includes(value.light) || value.dark && !joinedColorSchemes.includes(value.dark)) {\n      console.error(\"`\".concat(value, \"` does not exist in `theme.colorSchemes`.\"));\n    } else {\n      setState(currentState => {\n        const newState = _extends({}, currentState);\n        if (value.light || value.light === null) {\n          newState.lightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        }\n        if (value.dark || value.dark === null) {\n          newState.darkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        }\n        return newState;\n      });\n      if (value.light) {\n        localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-light\"), value.light);\n      }\n      if (value.dark) {\n        localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-dark\"), value.dark);\n      }\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(e => {\n    if (state.mode === 'system') {\n      setState(currentState => _extends({}, currentState, {\n        systemMode: e.matches ? 'dark' : 'light'\n      }));\n    }\n  }, [state.mode]); // Ref hack to avoid adding handleMediaQuery as a dep\n\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = function () {\n      return mediaListener.current(...arguments);\n    }; // Always listen to System preference\n\n    const media = window.matchMedia('(prefers-color-scheme: dark)'); // Intentionally use deprecated listener methods to support iOS & old browsers\n\n    media.addListener(handler);\n    handler(media);\n    return () => media.removeListener(handler);\n  }, []); // Save mode, lightColorScheme & darkColorScheme to localStorage\n\n  React.useEffect(() => {\n    if (state.mode) {\n      localStorage.setItem(modeStorageKey, state.mode);\n    }\n    processState(state, mode => {\n      if (mode === 'light') {\n        localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-light\"), state.lightColorScheme);\n      }\n      if (mode === 'dark') {\n        localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-dark\"), state.darkColorScheme);\n      }\n    });\n  }, [state, colorSchemeStorageKey, modeStorageKey]); // Handle when localStorage has changed\n\n  React.useEffect(() => {\n    const handleStorage = event => {\n      const value = event.newValue;\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n    if (storageWindow) {\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => storageWindow.removeEventListener('storage', handleStorage);\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}","map":{"version":3,"names":["_extends","React","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","getSystemMode","mode","window","mql","matchMedia","matches","undefined","processState","state","callback","systemMode","getColorScheme","lightColorScheme","darkColorScheme","resolveValue","key","defaultValue","value","localStorage","getItem","e","useCurrentColorScheme","options","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","modeStorageKey","colorSchemeStorageKey","storageWindow","joinedColorSchemes","join","setState","useState","initialMode","concat","colorScheme","setMode","useCallback","currentState","newMode","setItem","setColorScheme","includes","console","error","newState","light","dark","handleMediaQuery","mediaListener","useRef","current","useEffect","handler","arguments","media","addListener","removeListener","handleStorage","event","newValue","startsWith","match","endsWith","addEventListener","removeEventListener"],"sources":["/Users/philippknestel/Documents/GitHub/portfolio/portfolio-phkn/node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (mql.matches) {\n      return 'dark';\n    }\n\n    return 'light';\n  }\n\n  return undefined;\n}\n\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n\n  return undefined;\n}\n\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n\n    return undefined;\n  });\n}\n\nfunction resolveValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n\n  let value;\n\n  try {\n    value = localStorage.getItem(key) || undefined;\n  } catch (e) {// Unsupported\n  }\n\n  return value || defaultValue;\n}\n\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = resolveValue(modeStorageKey, defaultMode);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme: resolveValue(`${colorSchemeStorageKey}-light`) || defaultLightColorScheme,\n      darkColorScheme: resolveValue(`${colorSchemeStorageKey}-dark`) || defaultDarkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      const newMode = !mode ? defaultMode : mode;\n\n      if (mode === currentState.mode) {\n        return currentState;\n      }\n\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(modeStorageKey, newMode);\n      }\n\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value || typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = _extends({}, currentState);\n\n          if (!value) {\n            // reset to default color scheme\n            newState.lightColorScheme = defaultLightColorScheme;\n            newState.darkColorScheme = defaultDarkColorScheme;\n            return newState;\n          }\n\n          processState(currentState, mode => {\n            localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else if (value.light && !joinedColorSchemes.includes(value.light) || value.dark && !joinedColorSchemes.includes(value.dark)) {\n      console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n    } else {\n      setState(currentState => {\n        const newState = _extends({}, currentState);\n\n        if (value.light || value.light === null) {\n          newState.lightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        }\n\n        if (value.dark || value.dark === null) {\n          newState.darkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        }\n\n        return newState;\n      });\n\n      if (value.light) {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, value.light);\n      }\n\n      if (value.dark) {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, value.dark);\n      }\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(e => {\n    if (state.mode === 'system') {\n      setState(currentState => _extends({}, currentState, {\n        systemMode: e.matches ? 'dark' : 'light'\n      }));\n    }\n  }, [state.mode]); // Ref hack to avoid adding handleMediaQuery as a dep\n\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args); // Always listen to System preference\n\n\n    const media = window.matchMedia('(prefers-color-scheme: dark)'); // Intentionally use deprecated listener methods to support iOS & old browsers\n\n    media.addListener(handler);\n    handler(media);\n    return () => media.removeListener(handler);\n  }, []); // Save mode, lightColorScheme & darkColorScheme to localStorage\n\n  React.useEffect(() => {\n    if (state.mode) {\n      localStorage.setItem(modeStorageKey, state.mode);\n    }\n\n    processState(state, mode => {\n      if (mode === 'light') {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, state.lightColorScheme);\n      }\n\n      if (mode === 'dark') {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, state.darkColorScheme);\n      }\n    });\n  }, [state, colorSchemeStorageKey, modeStorageKey]); // Handle when localStorage has changed\n\n  React.useEffect(() => {\n    const handleStorage = event => {\n      const value = event.newValue;\n\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n\n    if (storageWindow) {\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => storageWindow.removeEventListener('storage', handleStorage);\n    }\n\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}