{"ast":null,"code":"var own = {}.hasOwnProperty;\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {};\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid;\n    var handlers = one.handlers;\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown;\n    }\n    if (fn) {\n      return fn.apply(this, arguments);\n    }\n  }\n  one.handlers = settings.handlers || {};\n  one.invalid = settings.invalid;\n  one.unknown = settings.unknown;\n  return one;\n}","map":{"version":3,"names":["own","hasOwnProperty","zwitch","key","options","settings","one","value","fn","invalid","handlers","call","unknown","apply","arguments"],"sources":["/Users/philippknestel/Documents/GitHub/portfolio/portfolio-phkn/node_modules/zwitch/index.js"],"sourcesContent":["var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n"],"mappings":"AAAA,IAAIA,GAAG,GAAG,CAAC,CAAC,CAACC,cAAc;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,GAAG,EAAEC,OAAO,EAAE;EACnC,IAAIC,QAAQ,GAAGD,OAAO,IAAI,CAAC,CAAC;;EAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASE,GAAGA,CAACC,KAAK,EAAE;IAClB,IAAIC,EAAE,GAAGF,GAAG,CAACG,OAAO;IACpB,IAAIC,QAAQ,GAAGJ,GAAG,CAACI,QAAQ;IAE3B,IAAIH,KAAK,IAAIP,GAAG,CAACW,IAAI,CAACJ,KAAK,EAAEJ,GAAG,CAAC,EAAE;MACjCK,EAAE,GAAGR,GAAG,CAACW,IAAI,CAACD,QAAQ,EAAEH,KAAK,CAACJ,GAAG,CAAC,CAAC,GAAGO,QAAQ,CAACH,KAAK,CAACJ,GAAG,CAAC,CAAC,GAAGG,GAAG,CAACM,OAAO;IAC1E;IAEA,IAAIJ,EAAE,EAAE;MACN,OAAOA,EAAE,CAACK,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAClC;EACF;EAEAR,GAAG,CAACI,QAAQ,GAAGL,QAAQ,CAACK,QAAQ,IAAI,CAAC,CAAC;EACtCJ,GAAG,CAACG,OAAO,GAAGJ,QAAQ,CAACI,OAAO;EAC9BH,GAAG,CAACM,OAAO,GAAGP,QAAQ,CAACO,OAAO;EAE9B,OAAON,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module"}